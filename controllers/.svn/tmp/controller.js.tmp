var url = require("url");

var Comment = require("../model/Comment.js");
var formidable = require("formidable");
var foodListTable = require("../model/foodListTable.js");

var Food = require("../model/foodListTable.js");
var recommendList = require("../model/recommend.js");

var User = require("../model/user.js");
var catagory = require("../model/catagory.js");


exports.showHome = function(req,res){
    res.render("home",{login:req.session.login,username:req.session.username});
}

exports.showSide = function(req,res){
    res.render("side");
}

//exports.showHome = function (req, res) {
//  res.render("home", { username: req.session.username });
//}


exports.showCenter = function (req, res) {
    res.render("center");
}

exports.showRecommend = function (req, res) {
    res.render("recommend",{login:req.session.login,username: req.session.username,phone : req.session.phone, email:req.session.email });
}



exports.getBestSale = function (req, res) {
    recommendList.find({}, function (err, result) {
        if (err) {
            console.log("failure");
        }
        console.log(result);
        res.send(result);
    })
}
exports.showBestSale = function (req, res) {
    res.render("bestSale");
}

exports.showCatagory = function (req, res) {
    res.render("catagory");
}
exports.getCatagory = function (req, res) {
    catagory.find({}, function (err, result) {
        console.log("1232");
        if (err) {
            console.log("failure");
        }
        console.log(result);
        // res.render(result);
    })
}

exports.showDetail = function (req, res) {

    res.render("detail");
}

exports.showCart = function (req, res) {
    res.render("cart");
}

exports.showHistoryOrder = function (req, res) {
    res.render("historyOrder");
}

exports.showJiesuan = function (req, res) {

    res.render("jiesuan");
}

exports.showManage = function (req, res) {
    res.render("manage", { username: req.session.username});
}

exports.showHead = function (req, res) {
    res.render("head",{login:req.session.login,username:req.session.username});
}

exports.showFooter = function (req, res) {
    res.render("footer");
}

exports.showProductManage = function (req, res) {
    res.render("productManage");
}

exports.showOrderManage = function (req, res) {
    res.render("orderManage");
}

exports.showNone = function (req, res) {
    res.render("none");
}




//这是添加评论的方法
exports.saveRecommend = function(req,res){
	var form = new formidable.IncomingForm();
	form.parse(req,function(err,fields,files){
		console.log("接收来自ajax的数据:"+ JSON.stringify(fields));
		Comment.insertComment(fields,function(result){
			console.log("数据处理完毕，得到code="+ result);
			res.json({"code": result});
		})
	})
}


exports.showGljTestOne = function(req,res){
	res.render("gljTestOne");
}

var arr = []
exports.showGljTestTwo = function (req, res) {

    		res.render("gljTestTwo",{arr:arr});

}

//根据_id获取每一条数据

exports.showData = function (req, res) {


    console.log(url.parse(req.url, true).query.id)
    var id = url.parse(req.url, true).query.id;

    Food.find({ _id: id }, function (err, result) {
        //         console.log(result);
        for(var i=0;i<result.length;i++){
            arr.push(result[i]);
        }
        console.log(arr);
        	    //   res.render(arr);

    });
}




//获取所有菜单数据
exports.showProductManageSave = function (req, res) {

    console.log('9090');
    Food.find({}, function (err, result) {
        // console.log(result);
        res.send(result);
    });

}

//添加菜单
exports.showAddFood = function (req, res) {
    var form = new formidable.IncomingForm();
    form.parse(req, function (err, fields, files) {
        console.log('接受到来自ajax的数据:' + JSON.stringify(fields));

        //做持久化
        Food.insertFood(fields, function (result) {
            console.log("数据处理完成，得到code=" + result);
            res.json({ "code": result });
        })
    })
}


//注册页面
exports.showRegister = function (req, res) {
    res.render("register", {
        "login": req.session.login == "1" ? true : false,
        "username": req.session.login == "1" ? req.session.username : "",
        
    });
};

//注册业务
exports.doRegister = function (req, res) {
    //得到用户填写的东西
    var form = new formidable.IncomingForm();
    form.parse(req, function (err, fields, files) {
        console.log('接受到来自ajax的数据：' + JSON.stringify(fields));
        //得到表单之后做的事情

        //        console.log(fields.username);
        //查询数据库中是不是有这个人
        User.find({ username: fields.username }, function (err, data) {
            console.log(data)
            if (data.length != 0) {
//              res.send("-1"); //被占用
                return;
            }
            //           console.log(fields)
            var user = new User(fields);
            user.save(function (err) {
                if (err) {
                    res.json({ "code": -1 });
                } else {
                    //没有相同的人，就可以执行接下来的代码了：
                    //现在可以证明，用户名没有被占用
                    req.session.login = "1";
                    req.session.username = fields.username;
                    req.session.password = fields.password;
                    req.session.phone = fields.phone;
                    req.session.email = fields.email;
                    res.json({ "code": 1 });
                }
            });

        });
    });
};


//显示登陆页面
exports.showLogin = function (req, res) {
    res.render("login", {
        "login": req.session.login == "1" ? true : false,
        "username": req.session.login == "1" ? req.session.username : "",
        
    });
};


//登陆页面的执行
exports.doLogin = function (req, res) {
    //得到用户表单
    var form = new formidable.IncomingForm();
    form.parse(req, function (err, fields, files) {
        //得到表单之后做的事情
        var username = fields.username;
        var password = fields.password;
        //查询数据库，看看有没有个这个人
        User.find({ username: username }, function (err, result) {
            if (err) {
                res.send("-5");
                return;
            }
            //没有这个人
            if (result.length == 0) {
                res.send("-1"); //用户名不存在
                return;
            }
            //有的话，进一步看看这个人的密码是否匹配
            if (password == result[0].password) {
                req.session.login = "1";
                req.session.username = username;
                req.session.password = password;
                res.send("1");  //登陆成功
                return;
            } else {
                res.send("-2");  //密码错误
                return;
            }
        });



    });
};



exports.doHLogin = function (req, res) {
    //得到用户表单
    var form = new formidable.IncomingForm();
    form.parse(req, function (err, fields, files) {
        //后台数据写死
        var husername = fields.husername;
        var hphone = fields.hphone;
        (function (err, result) {
            if (husername != 'zz123') {
                res.send("-1"); //用户名不存在
                return;
            }
            if (hphone != '18815611575') {
                res.send("-2");  //密码错误
                return;
            }
            else {
                res.send("1")
                return;
            }
        })();
    })
}